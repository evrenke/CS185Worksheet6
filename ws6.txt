WORKSHEET 6 CONSOLE OUTPUT: ANNOTATED WITH QUESTIONS

Script started on 2021-10-15 06:48:55+00:00 [TERM="xterm" TTY="/dev/pts/0" COLUMNS="141" LINES="30"]

QUESTION 1) get a current datetime stamp in a variable DATETIME ( I used 'now' instead)

]0;keskin@f6linux6: ~keskin@f6linux6:~$ now=$(date)

QUESTION 2) cp the file PRODUCTS/productID.txt to a file PRODUCTS/productID.DATETIME.txt
(where DATETIME is the current datetimestamp you got)

]0;keskin@f6linux6: ~keskin@f6linux6:~$ cp PRODUCTS/0060193395.txt "PRODUCTS/0060193395.${now}.txt"

QUESTION 3) append a new row to the end of PRODUCTS/productID.DATETIME.txt as a new product review 
(the row contents don't matter, just make sure the rating_score you give is a numerical value)

]0;keskin@f6linux6: ~keskin@f6linux6:~$ echo "3 2" >> "PRODUCTS/0060193395.$now.txt"

QUESTION 4) create a symbolic link named PRODUCTS/productID.LATEST.txt that points to file PRODUCTS/productID.DATETIME.txt
For this question, the symbolic link creation command has to be executed in PRODUCTS
so there are 'cd' change directory commands before and after

]0;keskin@f6linux6: ~keskin@f6linux6:~$ cd PRODUCTS;
]0;keskin@f6linux6: ~/PRODUCTSkeskin@f6linux6:~/PRODUCTS$ ln -s "0060193395.$now.txt" 0060193395.LATEST.txt; cd

QUESTIOM 5) Write a cron tab that once a minute checks the file PRODUCTS/productID.LATEST.txt (the symbolic link, such that you can change the symlink in order to get the latest product reviews file) and outputs the mean (average) rating_score for this product to a file PRODUCTS/productID.AVGRATING.txt

Steps taken:
1) Create 'cronfile'
2) Place every minute awk sum command into cronfile
3) Check crontab job using cronfile (confirm with 'crontab -l)
4) Wait a minute, and then see result using 'nano'
NOTE: Display of nano as scripted file is messy, but result from below is 4.1988 for review average of the product.

]0;keskin@f6linux6: ~keskin@f6linux6:~$ touch cronfile
]0;keskin@f6linux6: ~keskin@f6linux6:~$ echo "* * * * * awk '{sum += \$1} END { if (NR > 0) print sum / NR }' PRODUCTS/0060193395.LATEST.txt > PRODUCTS/0060193395.AVGRATING.txt 2>&1" > cronfile
]0;keskin@f6linux6: ~keskin@f6linux6:~$ crontab cronfile
]0;keskin@f6linux6: ~keskin@f6linux6:~$ crontab -l
* * * * * awk '{sum += $1} END { if (NR > 0) print sum / NR }' PRODUCTS/0060193395.LATEST.txt > PRODUCTS/0060193395.AVGRATING.txt 2>&1
]0;keskin@f6linux6: ~keskin@f6linux6:~$ nano PRODUCTS/0060193395.AVGRATING.txt [K\[K
[?2004h[?1049h[22;0;0t[1;30r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[28;64H(B[0;7m[ Reading... ](B[m[28;70H(B[0;7m 1 line ](B[m[H(B[0;7m  GNU nano 4.8                                          PRODUCTS/0060193395.AVGRATING.txt                                                    [1;140H(B[m
[29d(B[0;7m^G(B[m Get Help    (B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut Text    (B[0;7m^J(B[m Justify     (B[0;7m^C(B[m Cur Pos     (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Mark Text  (B[0;7mM-](B[m To Bracket
[30d(B[0;7m^X(B[m Exit[30;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Paste Text  (B[0;7m^T(B[m To Spell    (B[0;7m^_(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy Text  (B[0;7m^Q(B[m Where Was
[28d[2d[39;49m(B[m 4.1988
[?12l[?25h[?25l[28d[J[30d[?12l[?25h[30;1H[?1049l[23;0;0t
[?1l>[?2004l]0;keskin@f6linux6: ~keskin@f6linux6:~$ historu[Ky > cmds.log
]0;keskin@f6linux6: ~keskin@f6linux6:~$ exit

Script done on 2021-10-15 06:50:16+00:00 [COMMAND_EXIT_CODE="0"]
